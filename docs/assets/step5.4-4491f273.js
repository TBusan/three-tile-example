var V=Object.defineProperty;var L=(s,e,t)=>e in s?V(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var a=(s,e,t)=>(L(s,typeof e!="symbol"?e+"":e,t),t);import"./modulepreload-polyfill-3cfb730f.js";import{C as d,az as B,n as D,ap as z,l as b,P,an as _,as as E,c as G,V as M,b as j,G as k,bw as A,B as H,q as U,h as y,s as Z,j as I,m as N,bx as q,z as K}from"./util-7385d603.js";import{g as O}from"./lil-gui.module.min-a1e98589.js";class J{constructor(e,t=32){this.isLut=!0,this.lut=[],this.map=[],this.n=0,this.minV=0,this.maxV=1,this.setColorMap(e,t)}set(e){return e.isLut===!0&&this.copy(e),this}setMin(e){return this.minV=e,this}setMax(e){return this.maxV=e,this}setColorMap(e,t=32){this.map=f[e]||f.rainbow,this.n=t;const o=1/this.n,r=new d,h=new d;this.lut.length=0,this.lut.push(new d(this.map[0][1]));for(let c=1;c<t;c++){const n=c*o;for(let i=0;i<this.map.length-1;i++)if(n>this.map[i][0]&&n<=this.map[i+1][0]){const l=this.map[i][0],p=this.map[i+1][0];r.set(this.map[i][1]),h.set(this.map[i+1][1]);const m=new d().lerpColors(r,h,(n-l)/(p-l));this.lut.push(m)}}return this.lut.push(new d(this.map[this.map.length-1][1])),this}copy(e){return this.lut=e.lut,this.map=e.map,this.n=e.n,this.minV=e.minV,this.maxV=e.maxV,this}getColor(e){e=B.clamp(e,this.minV,this.maxV),e=(e-this.minV)/(this.maxV-this.minV);const t=Math.round(e*this.n);return this.lut[t]}addColorMap(e,t){return f[e]=t,this}createCanvas(){const e=document.createElement("canvas");return e.width=1,e.height=this.n,this.updateCanvas(e),e}updateCanvas(e){const t=e.getContext("2d",{alpha:!1}),o=t.getImageData(0,0,1,this.n),r=o.data;let h=0;const c=1/this.n,n=new d,i=new d,l=new d;for(let p=1;p>=0;p-=c)for(let m=this.map.length-1;m>=0;m--)if(p<this.map[m][0]&&p>=this.map[m-1][0]){const v=this.map[m-1][0],S=this.map[m][0];n.set(this.map[m-1][1]),i.set(this.map[m][1]),l.lerpColors(n,i,(p-v)/(S-v)),r[h*4]=Math.round(l.r*255),r[h*4+1]=Math.round(l.g*255),r[h*4+2]=Math.round(l.b*255),r[h*4+3]=255,h+=1}return t.putImageData(o,0,0),e}}const f={rainbow:[[0,255],[.2,65535],[.5,65280],[.8,16776960],[1,16711680]],cooltowarm:[[0,3952322],[.2,10206463],[.5,14474460],[.8,16163717],[1,11797542]],blackbody:[[0,0],[.2,7864320],[.5,15086080],[.8,16776960],[1,16777215]],grayscale:[[0,0],[.2,4210752],[.5,8355712],[.8,12566463],[1,16777215]]};function Q(s={scale:1}){const e=new D({transparent:!0,vertexColors:!0,opacity:.6,side:z,displacementScale:s.scale});return e.onBeforeCompile=t=>{t.vertexShader=`varying vec3 vPosition;
            `+t.vertexShader,t.vertexShader=t.vertexShader.replace("#include <fog_vertex>",`
                #include <fog_vertex>
                vPosition = position;
                // transformed += normalize( objectNormal ) * ( texture2D(map, vUv ).a * displacementScale + displacementBias );
            `),t.fragmentShader=`varying vec3 vPosition;
            `+t.fragmentShader,t.fragmentShader=t.fragmentShader.replace("#include <dithering_fragment>",`
                #include <dithering_fragment>
                float h = vPosition.z;

                // 等值线
                float step = h*20.0 ; // 分析20条等值线
                float f  = fract(step);// 小数部分
                float width = fwidth(step);// 相邻像素的差
                float aa = smoothstep(width, width/1.1, f);//两个值之间插值
                float inv = 1.0 - aa;
                if(inv<1.0){
                    gl_FragColor = vec4(0.0,0.0,0.3,1.0);
                }
            `)},e}class R extends b{constructor(t){super();a(this,"_hScale",5);a(this,"width",1);a(this,"height",1);a(this,"data",[]);a(this,"max",-999999);a(this,"min",999999);a(this,"material",Q());t&&this.setData(t)}setData(t){var o;return this.width=t[0].length,this.height=t.length,this.data=t.flat(),this.max=Math.max(...this.data),this.min=Math.min(...this.data),(o=this.geometry)==null||o.dispose(),this.geometry=new P(1,1,this.width-1,this.height-1),this.hScale=1,this}get hScale(){return this._hScale}set hScale(t){this._hScale=t;const o=this.geometry.attributes.position,r=[];let h=new J("rainbow",512);h.setMax(100),h.setMin(0);for(let c=0,n=o.count;c<n;c++){const i=(this.data[c]-this.min)/(this.max-this.min);o.setZ(c,i*t);const l=h.getColor(i*100);r.push(l.r,l.g,l.b)}this.geometry.setAttribute("color",new _(r,3)),this.geometry.attributes.color.needsUpdate=!0,this.geometry.computeVertexNormals(),this.geometry.attributes.position.needsUpdate=!0}}async function T(s){const e=await new E().loadAsync(s);return X(e)}class W{constructor(){a(this,"diamond","");a(this,"type",4);a(this,"name","");a(this,"year",2e3);a(this,"month",1);a(this,"day",1);a(this,"hour",0);a(this,"span",0);a(this,"level",0);a(this,"lonSpan",1);a(this,"latSpan",1);a(this,"beginLon",-180);a(this,"endLon",180);a(this,"beginLat",-90);a(this,"endLat",90);a(this,"countLon",360);a(this,"countLat",180);a(this,"levelSpan",10);a(this,"levelBegin",0);a(this,"levelEnd",100);a(this,"smoothingCoefficient",0);a(this,"boldValue",0)}}function X(s){const e=s.split(/[\s+\n+]+/),t=new W;let o=0;const r=t;for(let n in t)r[n]=typeof r[n]=="number"?parseFloat(e[o]):e[o],o++;if(t.diamond!="diamond"||t.type!=4)throw"无法解析数据文件，不是Micaps第4类文件格式";const h=[];for(let n=t.levelBegin;n<=t.levelEnd;n+=t.levelSpan)h.push(n);const c=new Array(t.countLat);for(let n=0;n<t.countLat;n++){let i=new Array(t.countLon);for(let l=0;l<t.countLon;l++)i[l]=parseFloat(e[o++]);c[n]=i}return{data:c,head:t,levels:h}}const u=G([q,K],N),C=u.project(105,28),Y=new M(C.x,C.y,0),$=new M(0,-2e3,3e3),x=j("#map",Y,$);x.scene.add(u);x.scene.background=new d(0);u.addEventListener("tile-loaded",s=>{s.tile.material.forEach(e=>{var t;return(t=e.color)==null?void 0:t.set(new d(8947848))})});const g=((s,e)=>{const t=new k;t.applyMatrix4(A(u,s,e,1)),t.scale.setZ(200),t.translateZ(100),t.renderOrder=10;const o=new b(new H),r=new U(o,16711935);return t.add(r),t})(new y(67,11),new y(140,57)),w=(()=>{const s=new R;return T("../../data/md4/10112608.000").then(e=>{s.setData(e.data)}),s.scale.setZ(.5),s})();g.add(w);x.scene.add(g);const tt=new O,F=tt.addFolder("500hpa高度场");F.add(g.scale,"z",100,1e3,1).name("垂直拉伸").onChange(s=>g.position.z=s/2);F.add(w.material,"opacity",.1,1,.1).name("透明度");F.add(w.material,"wireframe").name("网格");Z(x,u);I(u);
